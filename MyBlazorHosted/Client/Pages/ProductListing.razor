@page "/"
@using MyBlazorHosted.Libraries.Product.Models;
@inject NavigationManager navigationManager
@inject IConfiguration configuration
@inject HttpClient _HttpClient
@inject ILogger<ProductListing> _logger

<PageTitle>لیست محصولات</PageTitle>
<HeadContent>
    <meta name="description" content="ایشون لیست محصولات هستند" />
</HeadContent>

<Ads Title="@configuration["Ads:Name"]"
     Description="@configuration["Ads:Description"]"
     Image="@configuration["Ads:Image"]"
     Background="@configuration["Ads:BackgroundColor"]" />

@if (Products?.Any() ?? false)
{
    <h2>آخرین محصولات ما</h2>
    <hr />
    <div class="row">
        <ErrorBoundary>
            <ChildContent>
                 @foreach (var product in Products)
                 {
                      <ProductItem Product="product" />
                 }
            </ChildContent>
            <ErrorContent>
                <div class="alert alert-danger">
                    <p>متاسفانه با خطایی مواجه شدیم</p>
                </div>
            </ErrorContent>
        </ErrorBoundary>
    </div>
    <div class="row">
        @if (TotalPageCount > 1)
        {
            <ul class="pagination">
                @for (int page = 1; page <= TotalPageCount; page++)
                {
                    <li class="page-item">
                        <a class="page-link" href="@navigationManager.GetUriWithQueryParameter("page",page)">@(page)</a>
                    </li>
                }
            </ul>
        }
    </div>
}

@code {
    public IList<ProductModel>? Products { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public int? Page { get; set; }

    public int? TotalPageCount { get; set; }
}

@functions
{
    protected override async Task OnParametersSetAsync()
    {
        //int pagesSize = int.Parse(configuration["ProductListing:PageSize"]);
        var productConfig = configuration.GetSection("ProductListing");

        var pageSize = productConfig.GetValue<int>("PageSize");

        Products = await _HttpClient.GetFromJsonAsync<IList<ProductModel>>(
            string.Format(
                "/api/Product?size={0}&page={1}",
                pageSize,
                Page??1
            )
        );

        TotalPageCount = await _HttpClient.GetFromJsonAsync<int>(
            string.Format(
                "/api/Product/total-page-count?size={0}",
                pageSize
            )
        );

        _logger.LogWarning("this is the product listing page");

        await base.OnParametersSetAsync();
    }
}